# PW

npm install express nodemon esm morgan
npm install nodemon --save-dev
"start": "npx nodemon -r esm index.js"

npm install cookie-parser
------------------------------------------------------------
import express from "express"
const morgan = require("morgan")

const app = express()
const PORT = 4444
app.use("/sum/:num1/:num2", (req,res)=>{
    res.send(`${parseInt(req.params.num1) + parseInt(req.params.num2)}`)
})

app.use(morgan("combined"))

app.listen(PORT, () => {
    console.log(`Escutando a porta ${PORT}`)
})
----------------------------------------------------------
import { readFile } from "fs"
/*
const promises1 = new Promise((resolve, reject) => {
    readFile("./segunda.txt", (error, data1) => {
        if(error) reject(error)
        resolve(parseInt(data1))
    })
})

const promises2 = new Promise((resolve, reject) => {
    readFile("./terca.txt", (error, data1) => {
        if(error) reject(error)
        resolve(parseInt(data1))
    })
})
promises1
.then((data) => {
    console.log(data)
    return promises2
})
.then((data) => {
    console.log(data)
})
.catch((data) => {
    console.log("Error")
})

*/

function teste(path){
    return new Promise((resolve, reject) => {
        readFile(path, (error, data1) => {
            if(error) reject(error)
            resolve(parseInt(data1))
        })
    })
}

/*
teste("segunda.txt")
.then((data) => {
    console.log(data)
    return teste("terca.txt")
})
.then((data) => {
    console.log(data)
})
.catch((data) => {
    console.log("Error")
})
*/

Promise.all([teste("segunda.txt"), teste("terca.txt"), teste("quarta.txt")])
.then(([data1, data2, data3]) => {
    console.log(data1, data2, data3)
})
--------------------------------------
import { readFile } from "fs"

function teste(path){
    return new Promise((resolve, reject) => {
        readFile(path, (error, data1) => {
            if(error) reject(error)
            resolve(parseInt(data1))
        })
    })
}

async function soma(){
    const data1 = await teste("segunda.txt")
    const data2 = await teste("terca.txt")
    const data3 = await teste("quarta.txt")
    return data1 + data2 + data3
}

soma().then(data => console.log(data))
---------------------------------------
import express from "express"
import cookieParse from "cookie-parser"
const morgan = require("morgan")

const app = express()
const PORT = 4440

app.use(cookieParse())

var count = 0

app.use("/cookie", (req, res) => {
    if("count" in req.cookies) {
        count = parseInt(req.cookies.count) + 1
        res.cookie("count", count, new Date() + 600)
    }else{
        count = 0
        res.cookie("count", count, new Date() + 600)
        console.log(new Date() + 600)
    }

    res.send(`${count}`)

})

app.use("/clear", (req, res) => {
    res.clearCookie('count')
    res.send("Limpeza")
})

app.use(morgan("combined"))

app.listen(PORT, () => {
    console.log(`Escutando a porta ${PORT}`)
})
